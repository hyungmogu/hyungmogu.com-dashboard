{"version":3,"sources":["constants.js","components/Navigation/index.js","components/Form/index.js","components/Button/index.js","screens/InfoScreen/index.js","screens/ProjectDetailScreen/index.js","screens/ProjectsScreen/index.js","screens/WorkExperiencesScreen/index.js","screens/HomeScreen/index.js","App.js","reportWebVitals.js","index.js"],"names":["PrimaryNavMenuStyle","Nav","styled","nav","constants","NavLinkNew","NavLink","PrimaryNavMenu","exact","to","UserStyle","Div","div","User","icon","faUser","SecondaryNavMenuStyle","Header","Span","span","SecondaryNavMenu","InputStyle","Input","input","FormGroup","KeyValueInputStyle","InputKey","InputValue","AddMoreButtonStyle","Button","button","Section","section","KeyValueInput","AddMoreButton","props","onClick","ButtonStyle","primary","children","InfoScreenStyle","H2","h2","ButtonSection","InfoScreen","useState","contactsList","setContactsList","socialsList","setSocialsList","Form","map","item","index","data","_","oldArray","ProjectDetailScreenStyle","ProjectDetailScreen","secondary","ProjectsScreenStyle","PageSection","PaginationSection","TableStyle","Table","table","Th","th","width_25","width_15","width_5","Td","td","PaginationStyle","bg_grey","Pagination","faChevronLeft","faChevronRight","ProjectsScreen","faEdit","faTrashAlt","WorkExperiencesScreenStyle","width_20","WorkExperiencesScreen","HomeScreenStyle","HomeScreen","AppStyle","Main","main","App","className","path","component","WorkExperienceDetailScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e8bcb85.chunk.js","sourcesContent":["const colorNavyBlue = '#1A1E43';\nconst colorWhite = '#FFFFFF';\nconst colorGrey = '#D7D7D7';\nconst colorLightGrey = '#E9E9E9';\nconst colorPurple = '#8A8DCC';\nconst borderRadius = \"0.94rem\";\n\n\n\nexport default {\n    colorNavyBlue,\n    colorWhite,\n    colorGrey,\n    colorPurple,\n    colorLightGrey,\n    borderRadius\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport constants from '../../constants';\n\nconst PrimaryNavMenuStyle = {\n    Nav: styled.nav`\n        max-width: 15rem;\n        border-radius: 0.94rem;\n        background-color: ${constants.colorNavyBlue};\n        color: ${constants.colorWhite};\n        margin: 2.39rem 1.17rem;\n\n        h2 {\n            padding: 2.30rem 2.0rem;\n            margin: 0;\n        }\n\n        ul {\n            margin: 0;\n            padding: 0;\n            list-style-type: none;\n        }\n\n        li {\n            padding: 1.03rem 2.0rem;\n            Cursor: pointer;\n            width: calc(15rem - 2.0rem * 2);\n        }\n    `,\n    NavLinkNew : styled(NavLink)`\n        text-decoration: none;\n        color: ${constants.colorWhite};\n\n        &.active {\n            font-weight: bold;\n        }\n    `\n};\n\nfunction PrimaryNavMenu() {\n    return (\n        <PrimaryNavMenuStyle.Nav>\n            <h2>Menu</h2>\n            <ul>\n                <li><PrimaryNavMenuStyle.NavLinkNew exact to=\"/admin\">Home</PrimaryNavMenuStyle.NavLinkNew></li>\n                <li><PrimaryNavMenuStyle.NavLinkNew to=\"/admin/info\">Info</PrimaryNavMenuStyle.NavLinkNew></li>\n                <li><PrimaryNavMenuStyle.NavLinkNew to=\"/admin/projects\">Projects</PrimaryNavMenuStyle.NavLinkNew></li>\n                <li><PrimaryNavMenuStyle.NavLinkNew to=\"/admin/work-experience\">Work Experience</PrimaryNavMenuStyle.NavLinkNew></li>\n            </ul>\n        </PrimaryNavMenuStyle.Nav>\n    );\n};\n\nconst UserStyle = {\n    Div: styled.div`\n        border: 1px solid ${constants.colorPurple};\n        padding: 0.8em;\n        display: inline-block;\n        border-radius: 50%;\n        margin-right: 1em;\n\n        div {\n            width: 1.25em;\n            height: 1.25em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        path {\n            fill: ${constants.colorPurple};\n        }\n    `\n};\n\nfunction User() {\n    return (\n        <UserStyle.Div>\n            <div>\n                <FontAwesomeIcon icon={faUser}/>\n            </div>\n        </UserStyle.Div>\n    );\n};\n\nconst SecondaryNavMenuStyle = {\n    Header: styled.nav`\n       border-radius: ${constants.borderRadius};\n       padding: 0.52rem;\n       display: flex;\n       justify-content: flex-end;\n       align-items: center;\n       margin: 0 0 2.06rem 0;\n    `,\n    Span: styled.span`\n        margin-right: 0.75rem;\n\n        strong {\n            color: ${constants.colorPurple};\n        }\n    `\n};\n\nfunction SecondaryNavMenu() {\n    return (\n        <SecondaryNavMenuStyle.Header>\n            <SecondaryNavMenuStyle.Span>Hello, <strong>Admin</strong></SecondaryNavMenuStyle.Span>\n            <User/>\n        </SecondaryNavMenuStyle.Header>\n    );\n};\n\n\n\nexport {\n    PrimaryNavMenu,\n    SecondaryNavMenu,\n};","import styled from 'styled-components';\nimport constants from '../../constants';\n\nconst InputStyle = {\n    Div: styled.div`\n        display: flex;\n    `,\n    Input: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n        flex-grow: 1;\n    `\n};\n\nfunction Input() {\n    return(\n        <InputStyle.Div>\n            <InputStyle.Input/>\n        </InputStyle.Div>\n    )\n};\n\n\nconst FormGroup = styled.div`\n    margin: 0 0 0.6rem 0;\n\n    & > label {\n        margin: 0 0 0.6rem 0;\n    }\n\n    & > * {\n        display: block;\n    }\n\n    & > div {\n        display: flex;\n    }\n`;\n\nconst KeyValueInputStyle = {\n    Div: styled.div`\n        margin: 0 0 0.23rem 0;\n    `,\n    InputKey: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n\n        max-width: 10.31rem;\n        margin: 0 0.23rem 0 0;\n        flex-grow: initial;\n    `,\n    InputValue: styled.input`\n        border: 1px solid ${constants.colorGrey};\n        background-color: ${constants.colorLightGrey};\n        padding: 0.56rem;\n        flex-grow: 1;\n    `\n};\n\nfunction KeyValueInput() {\n    return(\n        <KeyValueInputStyle.Div>\n            <KeyValueInputStyle.InputKey/><KeyValueInputStyle.InputValue/>\n        </KeyValueInputStyle.Div>\n    )\n};\n\nconst AddMoreButtonStyle = {\n    Button: styled.button`\n        color: ${constants.colorWhite};\n        border: none;\n        background-color: ${constants.colorPurple};\n        border-radius: 0.14rem;\n        padding: 0.16rem;\n        cursor: pointer;\n    `,\n    Div: styled.div`\n        width: 1.1rem;\n        height: 1.1rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    `,\n    Section: styled.section`\n        display: flex;\n        justify-content: center;\n    `\n};\n\nfunction AddMoreButton(props) {\n    return(\n        <AddMoreButtonStyle.Section>\n            <AddMoreButtonStyle.Button onClick={props.onClick}>\n                <AddMoreButtonStyle.Div>\n                <strong>+</strong>\n                </AddMoreButtonStyle.Div>\n            </AddMoreButtonStyle.Button>\n        </AddMoreButtonStyle.Section>\n    );\n}\n\nexport default {\n    Input,\n    FormGroup,\n    KeyValueInput,\n    AddMoreButton,\n};","import styled from 'styled-components';\nimport constants from '../../constants';\n\n\nconst ButtonStyle = {\n    Button: styled.button`\n        border: transparent;\n        border-radius: ${constants.borderRadius};\n        background-color: ${props => {\n            if (props.primary) {\n                return constants.colorNavyBlue;\n            }\n        }};\n        color: ${constants.colorWhite};\n        padding: 0.56rem;\n        cursor: pointer;\n\n    `,\n    Div: styled.div`\n        min-width: 6.09rem;\n    `\n}\n\nexport default function Button(props) {\n    return(\n        <ButtonStyle.Button {...props}>\n            <ButtonStyle.Div>\n                {props.children}\n            </ButtonStyle.Div>\n        </ButtonStyle.Button>\n    );\n}","import React, { useState } from 'react';\nimport Form from '../../components/Form'\nimport styled from 'styled-components';\nimport constants from '../../constants';\nimport Button from '../../components/Button';\n\nconst sectionPadding = \"1.31rem\";\n\nconst InfoScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `\n};\n\nfunction InfoScreen() {\n    let [contactsList, setContactsList] = useState([{}]);\n    let [socialsList, setSocialsList] = useState([{}]);\n\n    return (\n        <InfoScreenStyle.Section>\n            <InfoScreenStyle.H2>Personal Information</InfoScreenStyle.H2>\n            <InfoScreenStyle.ButtonSection>\n                <Button primary>\n                    Save\n                </Button>\n            </InfoScreenStyle.ButtonSection>\n            <form>\n                <Form.FormGroup>\n                    <label>Name</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Website</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Contact</label>\n                    {contactsList.map((item, index) => <Form.KeyValueInput key={index} data={item}/>)}\n                    <Form.AddMoreButton onClick={_ => setContactsList(oldArray => [...oldArray, {}])}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Socials</label>\n                    {socialsList.map(item => <Form.KeyValueInput data={item}/>)}\n                    <Form.AddMoreButton onClick={_ =>  setSocialsList(oldArray => [...oldArray, {}])}/>\n                </Form.FormGroup>\n            </form>\n            <InfoScreenStyle.ButtonSection>\n                <Button primary>\n                    Save\n                </Button>\n            </InfoScreenStyle.ButtonSection>\n        </InfoScreenStyle.Section>\n    );\n}\n\nexport default InfoScreen;\n\n","import React, { useState } from 'react';\nimport Form from '../../components/Form'\nimport styled from 'styled-components';\nimport constants from '../../constants';\nimport Button from '../../components/Button';\n\nconst sectionPadding = \"1.31rem\";\n\nconst ProjectDetailScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `\n};\n\nfunction ProjectDetailScreen() {\n    let [contactsList, setContactsList] = useState([{}]);\n    let [socialsList, setSocialsList] = useState([{}]);\n\n    return (\n        <ProjectDetailScreenStyle.Section>\n            <ProjectDetailScreenStyle.H2>Portfolio Dashboard</ProjectDetailScreenStyle.H2>\n            <ProjectDetailScreenStyle.ButtonSection>\n                <Button secondary>\n                    Delete\n                </Button>\n                <Button primary>\n                    Save\n                </Button>\n            </ProjectDetailScreenStyle.ButtonSection>\n            <form>\n                <Form.FormGroup>\n                    <label>Name</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Website</label>\n                    <Form.Input/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Contact</label>\n                    {contactsList.map((item, index) => <Form.KeyValueInput key={index} data={item}/>)}\n                    <Form.AddMoreButton onClick={_ => setContactsList(oldArray => [...oldArray, {}])}/>\n                </Form.FormGroup>\n                <Form.FormGroup>\n                    <label>Socials</label>\n                    {socialsList.map(item => <Form.KeyValueInput data={item}/>)}\n                    <Form.AddMoreButton onClick={_ =>  setSocialsList(oldArray => [...oldArray, {}])}/>\n                </Form.FormGroup>\n            </form>\n            <ProjectDetailScreenStyle.ButtonSection>\n                <Button primary>\n                    Save\n                </Button>\n            </ProjectDetailScreenStyle.ButtonSection>\n        </ProjectDetailScreenStyle.Section>\n    );\n}\n\nexport default ProjectDetailScreen;\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../components/Button';\nimport constants from '../../constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nconst sectionPadding = \"1.31rem\";\n\nconst ProjectsScreenStyle = {\n    PageSection: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `,\n    PaginationSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n    `\n};\n\nconst TableStyle = {\n    Table: styled.table`\n        width: 100%;\n        border-collapse: collapse;\n        margin: 0;\n    `,\n    Th: styled.th`\n        background-color: ${constants.colorLightGrey};\n        font-weight: normal;\n        text-align: left;\n        padding: 0.75rem;\n        width: ${props => {\n            if (props.width_25) {\n                return \"25%\";\n            } else if (props.width_15) {\n                return \"15%\";\n            } else if (props.width_5) {\n                return \"5%\";\n            }\n        }}\n    `,\n    Td: styled.td`\n        padding: 0.75rem;\n    `,\n    Button: styled.button`\n        background-color: transparent;\n        border: none;\n        padding: 0.16rem;\n        cursor: pointer;\n\n        div {\n            width: 1.1rem;\n            height: 1.1rem;\n        }\n    `\n}\n\nconst PaginationStyle = {\n    Button: styled.button`\n        border: ${constants.colorGrey};\n        padding: 0.28rem;\n        background-color: ${props => {\n            if (props.bg_grey) {\n                return constants.colorGrey;\n            } else {\n                return constants.colorWhite;\n            }\n        }};\n        cursor: pointer;\n    `\n};\n\nfunction Pagination() {\n    return(\n        <div>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronLeft}/>\n            </PaginationStyle.Button>\n            <PaginationStyle.Button>1</PaginationStyle.Button>\n            <PaginationStyle.Button>2</PaginationStyle.Button>\n            <PaginationStyle.Button>3</PaginationStyle.Button>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronRight}/>\n            </PaginationStyle.Button>\n        </div>\n    );\n}\n\nfunction ProjectsScreen() {\n    let [contactsList, setContactsList] = useState([{}]);\n    let [socialsList, setSocialsList] = useState([{}]);\n\n    return (\n        <ProjectsScreenStyle.PageSection>\n            <ProjectsScreenStyle.H2>Projects</ProjectsScreenStyle.H2>\n            <ProjectsScreenStyle.ButtonSection>\n                <Button primary>\n                    Add\n                </Button>\n            </ProjectsScreenStyle.ButtonSection>\n            <TableStyle.Table>\n                <tr>\n                    <TableStyle.Th width_25>Name</TableStyle.Th>\n                    <TableStyle.Th width_15>Date</TableStyle.Th>\n                    <TableStyle.Th width_25>Short Description</TableStyle.Th>\n                    <TableStyle.Th width_25>Tools Used</TableStyle.Th>\n                    <TableStyle.Th width_5></TableStyle.Th>\n                    <TableStyle.Th width_5></TableStyle.Th>\n                </tr>\n                <tr>\n                    <TableStyle.Td>Portfolio Dashboard</TableStyle.Td>\n                    <TableStyle.Td>March 1st, 2021</TableStyle.Td>\n                    <TableStyle.Td>Dashboard housing information for hyungmogu.com</TableStyle.Td>\n                    <TableStyle.Td>Node.js, PostgreSQL, ReactJS</TableStyle.Td>\n                    <TableStyle.Td>\n                        <TableStyle.Button>\n                            <div>\n                                <FontAwesomeIcon icon={faEdit}/>\n                            </div>\n                        </TableStyle.Button>\n                    </TableStyle.Td>\n                    <TableStyle.Td>\n                        <TableStyle.Button>\n                            <div>\n                                <FontAwesomeIcon icon={faTrashAlt}/>\n                            </div>\n                        </TableStyle.Button>\n                    </TableStyle.Td>\n                </tr>\n            </TableStyle.Table>\n            <ProjectsScreenStyle.PaginationSection>\n                <Pagination/>\n            </ProjectsScreenStyle.PaginationSection>\n        </ProjectsScreenStyle.PageSection>\n    );\n}\n\nexport default ProjectsScreen;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../components/Button';\nimport constants from '../../constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nconst sectionPadding = \"1.31rem\";\n\nconst WorkExperiencesScreenStyle = {\n    PageSection: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${sectionPadding};\n    `,\n    H2: styled.h2`\n        color: ${constants.colorNavyBlue};\n    `,\n    ButtonSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n\n        &:not(:last-child){\n            margin: 0 0 1.41rem 0;\n        }\n    `,\n    PaginationSection: styled.section`\n        display: flex;\n        justify-content: flex-end;\n    `\n};\n\nconst TableStyle = {\n    Table: styled.table`\n        width: 100%;\n        border-collapse: collapse;\n        margin: 0;\n    `,\n    Th: styled.th`\n        background-color: ${constants.colorLightGrey};\n        font-weight: normal;\n        text-align: left;\n        padding: 0.75rem;\n        width: ${props => {\n            if (props.width_25) {\n                return \"25%\";\n            } else if (props.width_20) {\n                return \"20  %\";\n            } else if (props.width_15) {\n                return \"15%\";\n            } else if (props.width_5) {\n                return \"5%\";\n            }\n        }}\n    `,\n    Td: styled.td`\n        padding: 0.75rem;\n    `,\n    Button: styled.button`\n        background-color: transparent;\n        border: none;\n        padding: 0.16rem;\n        cursor: pointer;\n\n        div {\n            width: 1.1rem;\n            height: 1.1rem;\n        }\n    `\n}\n\nconst PaginationStyle = {\n    Button: styled.button`\n        border: ${constants.colorGrey};\n        padding: 0.28rem;\n        background-color: ${props => {\n            if (props.bg_grey) {\n                return constants.colorGrey;\n            } else {\n                return constants.colorWhite;\n            }\n        }};\n        cursor: pointer;\n    `\n};\n\nfunction Pagination() {\n    return(\n        <div>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronLeft}/>\n            </PaginationStyle.Button>\n            <PaginationStyle.Button>1</PaginationStyle.Button>\n            <PaginationStyle.Button>2</PaginationStyle.Button>\n            <PaginationStyle.Button>3</PaginationStyle.Button>\n            <PaginationStyle.Button bg_grey>\n                <FontAwesomeIcon icon={faChevronRight}/>\n            </PaginationStyle.Button>\n        </div>\n    );\n}\n\nfunction WorkExperiencesScreen() {\n    let [contactsList, setContactsList] = useState([{}]);\n    let [socialsList, setSocialsList] = useState([{}]);\n\n    return (\n        <WorkExperiencesScreenStyle.PageSection>\n            <WorkExperiencesScreenStyle.H2>Work Experiences</WorkExperiencesScreenStyle.H2>\n            <WorkExperiencesScreenStyle.ButtonSection>\n                <Button primary>\n                    Add\n                </Button>\n            </WorkExperiencesScreenStyle.ButtonSection>\n            <TableStyle.Table>\n                <tr>\n                    <TableStyle.Th width_25>Name</TableStyle.Th>\n                    <TableStyle.Th width_15>Date Start</TableStyle.Th>\n                    <TableStyle.Th width_15>Date End</TableStyle.Th>\n                    <TableStyle.Th width_15>Position</TableStyle.Th>\n                    <TableStyle.Th width_20>Location</TableStyle.Th>\n                    <TableStyle.Th width_5></TableStyle.Th>\n                    <TableStyle.Th width_5></TableStyle.Th>\n                </tr>\n                <tr>\n                    <TableStyle.Td>SiteMax Systems Inc.</TableStyle.Td>\n                    <TableStyle.Td>January, 2018</TableStyle.Td>\n                    <TableStyle.Td>December, 2019</TableStyle.Td>\n                    <TableStyle.Td>Junior Developer</TableStyle.Td>\n                    <TableStyle.Td>Vancouver, BC, Canada</TableStyle.Td>\n                    <TableStyle.Td>\n                        <TableStyle.Button>\n                            <div>\n                                <FontAwesomeIcon icon={faEdit}/>\n                            </div>\n                        </TableStyle.Button>\n                    </TableStyle.Td>\n                    <TableStyle.Td>\n                        <TableStyle.Button>\n                            <div>\n                                <FontAwesomeIcon icon={faTrashAlt}/>\n                            </div>\n                        </TableStyle.Button>\n                    </TableStyle.Td>\n                </tr>\n            </TableStyle.Table>\n            <WorkExperiencesScreenStyle.PaginationSection>\n                <Pagination/>\n            </WorkExperiencesScreenStyle.PaginationSection>\n        </WorkExperiencesScreenStyle.PageSection>\n    );\n}\n\nexport default WorkExperiencesScreen;\n","import React from 'react';\nimport styled from 'styled-components';\nimport constants from '../../constants';\n\nconst containerPadding = \"1.31rem\";\n\nconst HomeScreenStyle = {\n    Section: styled.section`\n        border: 1px solid ${constants.colorGrey};\n        border-radius: ${constants.borderRadius};\n        padding: ${containerPadding};\n        flex-grow: 1;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    `,\n    Span: styled.span`\n        font-size: 1.5rem;\n        color: ${constants.colorNavyBlue};\n    `\n};\n\nfunction HomeScreen() {\n    return (\n        <HomeScreenStyle.Section>\n            <HomeScreenStyle.Span>Welcome to our Portfolio Site Dashboard</HomeScreenStyle.Span>\n        </HomeScreenStyle.Section>\n    );\n}\n\nexport default HomeScreen;\n\n","import './App.css';\nimport { PrimaryNavMenu, SecondaryNavMenu } from './components/Navigation';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport InfoScreen from './screens/InfoScreen';\nimport ProjectDetailScreen from './screens/ProjectDetailScreen';\nimport ProjectsScreen from './screens/ProjectsScreen';\nimport WorkExperienceDetailScreen from './screens/WorkExperienceDetailScreen';\nimport WorkExperiencesScreen from './screens/WorkExperiencesScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport styled from 'styled-components';\n\nconst AppStyle = {\n  Main: styled.main`\n    margin: 2.39rem 1.5rem;\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n  `\n};\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <PrimaryNavMenu/>\n        <AppStyle.Main>\n          <SecondaryNavMenu/>\n          <Switch>\n            <Route path=\"/admin/info\" component={InfoScreen}/>\n            <Route path=\"/admin/projects/:id\" component={ProjectDetailScreen}/>\n            <Route path=\"/admin/projects\" component={ProjectsScreen}/>\n            <Route path=\"/admin/work-experience/:id\" component={WorkExperienceDetailScreen}/>\n            <Route path=\"/admin/work-experience\" component={WorkExperiencesScreen}/>\n            <Route exact path=\"/admin\" component={HomeScreen}/>\n        </Switch>\n        </AppStyle.Main>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}